{"version":3,"sources":["Components/Nav/index.js","Components/Welcome/index.js","Components/Search/index.js","Components/Passengers/index.js","Components/Tickets/index.js","Containers/StepsLayout/index.js","Utils/api.js","Machines/bookingMachine.js","Containers/BaseLayout/index.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","_ref","state","send","_jsxs","className","children","_jsx","matches","onClick","Welcome","Search","_useState","useState","_useState2","_slicedToArray","flight","setFlight","options","context","countries","id","value","onChange","event","target","disabled","defaultValue","map","option","idx","name","common","concat","selectedCountry","Passengers","changeValue","passengers","onSubmit","e","preventDefault","newPassenger","passenger","type","placeholder","required","Tickets","StepsLayout","fetchCountries","fetch","then","response","json","fillCountries","initial","states","loading","invoke","src","onDone","actions","assign","data","onError","error","success","failure","on","RETRY","bookingMachine","createMachine","entry","START","_objectSpread","CONTINUE","CANCEL","DONE","cond","ADD","after","FINISH","setSelectedCountry","addPassenger","_toConsumableArray","resetContext","guards","moreThanOnePassenger","length","BaseLayout","_useMachine","useMachine","_useMachine2","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.b9fa0eb5.chunk.js","sourcesContent":["import React from 'react';\nimport './Nav.css';\n\nexport const Nav = ({ state, send }) => {\n  const goToWelcome = () => {\n    send('CANCEL')\n  }\n\n  return (\n    <nav className='Nav'>\n      <h1 className='Nav-logo'>Book a fly ✈</h1>\n        {!state.matches('initial') && !state.matches('ticket') &&\n          <button onClick={goToWelcome} className='Nav-cancel button-secondary'>Cancelar</button>\n        }\n    </nav>\n  );\n}; ","import React from 'react';\nimport './Welcome.css';\n\nexport const Welcome = ({ send }) => {\n  const startBooking = () => {\n    send('START');\n  };\n\n  return (\n    <div className='Welcome'>\n      <p className='Welcome-title title'>¡Hoy es el día!</p>\n      <p className='Welcome-description description'>Compra tu vuelo y conoce un nuevo rincón del mundo, te va a sorprender las maravillas que hay para explorar</p>\n      <button onClick={startBooking} className='Welcome-cancel button'>Comenzar</button>\n    </div>\n  );\n}; ","import React, { useState } from 'react';\nimport './Search.css';\n\nexport const Search = ({ state,send }) => {\n  const [flight, setFlight] = useState('');\n\n  const goToPassengers = () => {\n    send('CONTINUE', {selectedCountry:  flight});\n  }\n\n  const handleSelectChange = (event) => {\n    setFlight(event.target.value);\n  };\n\n  const options = state.context.countries;\n\n  return (\n    <div className='Search'>\n      <p className='Search-title title'>Busca tu destino</p>\n      <select id=\"country\" className='Search-select' value={flight} onChange={handleSelectChange}>\n        <option value=\"\" disabled defaultValue>Escoge un país</option>\n        {options.map((option, idx) => <option value={option.name.common} key={`country-${idx}`}>{option.name.common}</option>)}\n      </select>\n      <button onClick={goToPassengers} disabled={flight === ''} className='Search-continue button'>Continuar</button>\n    </div>\n  );\n}; ","import React, { useState } from 'react';\nimport './Passengers.css';\n\nexport const Passengers = ({ state, send }) => {\n  const [value, changeValue] = useState('');\n\n  const goToTicket = () => {\n    send('DONE');\n  }\n\n  const onChangeInput = (e) => {\n    changeValue(e.target.value);\n  }\n\n  const submit = (e) => {\n    e.preventDefault();\n    send('ADD', {newPassenger: value})\n    changeValue('');\n  }\n\n  const { passengers } =  state.context;\n\n  return (\n    <form onSubmit={submit} className='Passengers'>\n      <p className='Passengers-title title'>Agrega a las personas que van a volar ✈️</p>\n      {\n        passengers.map((passenger, idx) =>\n          <p key={`passenger-${idx}`}>{passenger}</p>\n        )\n      }\n      <input \n        id=\"name\" \n        name=\"name\" \n        type=\"text\" \n        placeholder='Escribe el nombre completo' \n        required \n        value={value} \n        onChange={onChangeInput}\n      />\n      <div className='Passengers-buttons'>\n        <button \n          className='Passengers-add button-secondary'\n          type=\"submit\"\n        >\n          Agregar Pasajero\n        </button>\n        <button\n          className='Passenger-pay button'\n          type=\"button\"\n          onClick={goToTicket}\n        >\n          Ver mi ticket\n        </button>\n      </div>\n    </form>\n  );\n};","import React from 'react';\nimport './Tickets.css';\n\nexport const Tickets = ({ send, context}) => {\n  const finish = () => {\n    send('FINISH');\n  };\n\n  return (\n    <div className='Tickets'>\n      <p className='Tickets-description description'>Gracias por volar con book a fly 💚</p>\n      <div className='Tickets-ticket'>\n        <div className='Tickets-country'>{context.selectedCountry}</div>\n        <div className='Tickets-passengers'>\n          <span>✈</span>\n          {context.passengers.map((passenger, idx) => (\n            <p key={`ticker-passenger-${idx}`}>{passenger}</p>\n          ))}\n        </div>\n      </div>\n      <button onClick={finish} className='Tickets-finalizar button'>Finalizar</button>\n    </div>\n  );\n}; ","import React from 'react';\nimport { Welcome } from '../../Components/Welcome';\nimport { Search } from '../../Components/Search';\nimport { Passengers } from '../../Components/Passengers';\nimport { Tickets } from '../../Components/Tickets';\nimport './StepsLayout.css';\n\nexport const StepsLayout = ({ state, send }) => {\n  const renderContent = () => {\n    if(state.matches('initial')) return <Welcome send={send}/>;\n    if(state.matches('search')) return <Search state={state} send={send}/>;\n    if(state.matches('passengers')) return <Passengers state={state} send={send}/>;\n    if(state.matches('ticket')) return <Tickets send={send} context={state.context}/>;\n    return null;\n  };\n\n  return (\n    <div className='StepsLayout'>\n      {renderContent()}\n    </div>\n  );\n}; ","export const fetchCountries = () => \n    fetch('https://restcountries.com/v3.1/region/ame')\n        .then((response) =>  response.json());","import { assign, createMachine } from 'xstate';\nimport { fetchCountries } from '../Utils/api';\n\nconst fillCountries = {\n  initial: \"loading\",\n  states: {\n    loading: {\n      invoke: {\n        id: 'getCountries',\n        src: () => fetchCountries,\n        onDone: {\n          target: 'success',\n          actions: assign({\n            countries: (context, event) => event.data,\n          })\n        },\n        onError: {\n          target: 'failure',\n          actions: assign({\n            error: 'Request Failed.',\n          })\n        }\n      }\n    },\n    success: {},\n    failure: {\n      on: {\n        RETRY: { target: \"loading\" },\n      },\n    },\n  },\n};\n\nconst bookingMachine = createMachine({\n  id: 'buy plane tickets',\n  initial: 'initial',\n  context: {\n    passengers: [],\n    selectedCountry: '',\n    countries: [],\n    error: ''\n  },\n  states: {\n    'initial': {\n      entry: 'resetContext',\n      on: {\n        START: {\n          target: 'search',\n          // actions: 'printStart'\n        }\n      }\n    },\n    'search': {\n      // entry: 'printEntry',\n      // exit: 'printExit',\n      on: {\n        CONTINUE: {\n          target: 'passengers',\n          actions: 'setSelectedCountry',\n        },\n        CANCEL: 'initial'\n      },\n      ...fillCountries,\n    },\n    'passengers': {\n      on: {\n        DONE: {\n          target: 'ticket',\n          cond: 'moreThanOnePassenger'\n        },\n        CANCEL: 'initial',\n        ADD: {\n          target: 'passengers',\n          actions: 'addPassenger'\n        }\n      }\n    },\n    'ticket': {\n      after: {\n        5000: {\n          target: 'initial',\n        }\n      },\n      on: {\n        FINISH: 'initial'\n      }\n    },\n  },\n},\n{\n  actions: {\n    // printStart: () => {console.log('Print Start')},\n    // printEntry: () => {console.log('Print Entry')},\n    // printExit: () => {console.log('Print Exit')},\n    setSelectedCountry: assign({\n      selectedCountry: (context, event) => event.selectedCountry,\n    }),\n    addPassenger: assign((context, event) => {\n      const newPassengers = [...context.passengers, event.newPassenger];\n\n      return {\n        passengers: newPassengers\n      }\n    }),\n    resetContext: assign({\n      selectedCountry: '',\n      passengers: [],\n      error: '',\n    }),\n  },\n  guards: {\n    moreThanOnePassenger: (context) => {\n      return context.passengers.length >= 1;\n    }\n  }\n},);\n\nexport { bookingMachine };\n\n// ----- PARALLEL MACHINE EXAMPLE -----\n// const fileMachine = createMachine({\n//   id: 'files',\n//   type: 'parallel',\n//   states: {\n//     upload: {\n//       initial: 'initial',\n//       states: {\n//         initial: {\n//           on: {\n//             INIT_UPLOAD: {target: 'loading'}\n//           }\n//         },\n//         loading: {\n//           on: {\n//             UPLOAD_COMPLETE: {target: 'finish'}\n//           }\n//         },\n//         finish: {},\n//       }\n//     },\n//     download: {\n//       initial: 'initial',\n//       states: {\n//         initial: {\n//           on: {\n//             INIT_DOWNLOAD: {target: 'loading'}\n//           }\n//         },\n//         loading: {\n//           on: {\n//             DOWNLOAD_COMPLETE: {target: 'finish'}\n//           }\n//         },\n//         finish: {}\n//     }\n//   }\n// });","import React from 'react';\nimport { useMachine } from '@xstate/react';\nimport { Nav } from '../../Components/Nav';\nimport { StepsLayout } from '../StepsLayout';\nimport { bookingMachine } from '../../Machines/bookingMachine';\nimport './BaseLayout.css';\n\nexport const BaseLayout = () => {\n  const [state, send] = useMachine(bookingMachine);\n\n  return (\n    <div className='BaseLayout'>\n      <Nav state={state} send={send}/>\n      <StepsLayout state={state} send={send}/>\n    </div>\n  );\n}","import { BaseLayout } from './Containers/BaseLayout';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BaseLayout/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}